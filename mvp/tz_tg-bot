***Telegram-бот для ЛФК при артрите***

18.02.2025


***Цель проекта:***
Создать MVP Telegram-бота, который будет помогать пациентам с артритом регулярно выполнять комплексы лечебных упражнений, напоминать о занятиях, предоставлять видео- и текстовые инструкции, а также собирать обратную связь (оценка боли, самочувствие) для последующего анализа эффективности программы ЛФК.

***Бизнес-гипотеза:***
Благодаря регулярным напоминаниям и индивидуальным рекомендациям пациенты улучшат своё самочувствие, снизят уровень боли, а данные обратной связи помогут оптимизировать программу ЛФК и улучшить качество реабилитационных услуг.


Бот предназначен для:
Пациентов с артритом и другими заболеваниями суставов, нуждающихся в регулярных занятиях ЛФК.
Медицинских учреждений и реабилитационных центров, желающих внедрить цифровые решения для контроля и поддержки лечения.
Исследовательских проектов для мониторинга динамики самочувствия пациентов.



***Функциональные требования***

Основной функционал:
- Регистрация и авторизация:
Пользователь начинает общение с ботом командой /start.
Бот приветствует пользователя, предлагает краткую инструкцию и запрашивает согласие на обработку данных (с учетом требований GDPR/ФЗ о персональных данных).
- Ежедневные напоминания:
Автоматическая рассылка напоминаний о необходимости выполнения упражнений в заданное время (например, 8:00 утра).
Возможность настройки времени напоминаний через команду /settings.
- Отправка инструкций:
Команды /exercise или кнопка в меню, которая отправляет пользователю описание комплекса упражнений (текст, изображения, ссылки на видео).
Возможность выбора категории упражнений (например, "Упражнения для рук", "Упражнения для ног").
- Сбор обратной связи:
Перед выполнением упражнений: бот спрашивает об общем самочувствии и уровне боли (вопросы с оценкой от 1 до 10).
После выполнения: бот запрашивает оценку уровня боли, изменения в самочувствии и комментарии (например, "Как изменилось ваше состояние после занятий?").
Дополнительный вопрос о планах на следующий день (например, "Планируете ли вы выполнить упражнения завтра?").
- Интерактивное меню и команды:
Основное меню с кнопками для доступа к основным функциям: "Начать тренировку", "Мои оценки", "Настройки", "FAQ".
Команды для получения справочной информации, помощи и обратной связи.
- Хранение и анализ данных:
Сбор данных (дата, уровень боли до и после занятий, общее самочувствие, комментарии) для каждого пользователя.
Интеграция с облачной базой данных (например, Google Sheets, Firebase или SQLite для MVP) для хранения информации.
Возможность выгрузки статистики для дальнейшего анализа эффективности программы.


***Нефункциональные требования***

Платформы: Бот должен работать в Telegram (Android, iOS, Web).
Производительность: Обработка запросов не должна превышать 2 секунд; система должна выдерживать нагрузку до 500 одновременных пользователей (на этапе тестирования).
Надежность и отказоустойчивость: Бот должен работать круглосуточно; предусмотреть систему логирования ошибок и уведомлений для разработчиков.
Безопасность:
Шифрование передаваемых данных (HTTPS для API запросов).
Сохранение персональных данных в соответствии с ФЗ о персональных данных.
Возможность удаления данных по запросу пользователя.
Удобство использования: Интуитивно понятный интерфейс с поддержкой inline-клавиатуры, четким и лаконичным текстом инструкций.
Локализация: Поддержка русского языка (базовая версия).


***Техническая архитектура и стек технологий***

Язык программирования: Python
Библиотека для Telegram API: python-telegram-bot
Планировщик задач: APScheduler для рассылки уведомлений по расписанию
База данных:
Для MVP: Google Sheets API или SQLite (с возможностью дальнейшего перехода на Firebase или другую СУБД).
Хостинг: Облачная платформа (Heroku, AWS, или аналогичный сервис для развертывания бота).
Интеграция: Возможность интеграции с внешними API (например, для отправки данных в CRM или аналитическую систему).


***Пользовательские сценарии (User Flow)***

Первичный контакт:
Пользователь запускает /start, получает приветственное сообщение и инструкцию.
Проходит короткий опрос о текущем самочувствии.
Ежедневное напоминание:
Бот автоматически отправляет напоминание в установленное время.
Пользователь выбирает команду /exercise для получения инструкции.
Выполнение упражнения:
Пользователь смотрит инструкции и выполняет упражнения.
После занятия бот запрашивает оценку боли и общее самочувствие.
Запись и анализ:
Все ответы сохраняются в базе данных.
Пользователь имеет возможность через команду /mystats получить свою статистику за период.
Настройки:
Команда /settings позволяет настроить время напоминаний и изменить базовые параметры (например, выбор типа упражнений).


***Этапы разработки и сроки***

Планирование и сбор требований: 1 неделя
Проектирование архитектуры и подготовка технического окружения: 1 неделя
Разработка основных функций (регистрация, напоминания, отправка инструкций, сбор обратной связи): 3–4 недели
Интеграция базы данных и настройка хранения данных: 1 неделя
Тестирование MVP (внутреннее и с пилотной группой пользователей): 1–2 недели
Доработка на основе обратной связи: 1 неделя
Развертывание на продакшн-хостинге и запуск: 1 неделя


***Требования к документации и поддержке***

Документация к API и внутреннему коду.
Пошаговое руководство для администрирования и настройки бота.
Описание процедуры обновлений и развертывания (CI/CD).
Руководство пользователя для конечного пользователя (FAQ, инструкции).



***Критерии приёмки***

Бот корректно отправляет напоминания согласно установленному расписанию.
Все команды (регистрация, получение инструкций, сбор обратной связи, настройки) работают без ошибок.
Данные пользователей корректно сохраняются и доступны для выгрузки.
Пользовательский интерфейс удобен и понятен (проверка через фокус-группу).
Документация передана вместе с кодом.



***Дополнительные пожелания***

Обеспечить возможность быстрого масштабирования функционала в будущем (например, интеграция с VR/AR, расширение базы данных).
Рассмотреть возможность внедрения аналитики (Google Analytics для Telegram-ботов или аналоги).
Предусмотреть возможность быстрой локализации на другие языки (в дальнейшем).
